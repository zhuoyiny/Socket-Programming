1. What have I done in this assignment:

the client gets three parameters from input command line, sending them to aws server using TCP. AWS gets the three parameters, sending them to monitor, and send link id to back-end server A and B. Server A and B get link id from AWS using UDP, searching in database a and b, sending back the result to AWS. If there is a match, the AWS server will send the input with the received link information to the back-end server C to calculate the transmission delay, propagation delay, and the end-to-end delay. After getting the calculated results from back-end server C, send the result back to client and monitor. During the whole process, client, monitor and AWS communicate over TCP connections. AWS and the Back-Servers A, B, C communicate over UDP connections.

2. What your code files are and what each one of them does?

client.c: it gets the three parameters, sending them to aws server using TCP. Getting back the result and show on the screen after calculated.

aws.c: it gets the three parameters from client.c, and send them to monitor, send link id to back-end server A and B to search if there is a match. If there is a match, the AWS server will send the input with the received link information to the back-end server C to calculate the transmission delay, propagation delay, and the end-to-end delay. After getting the calculated results from back-end server C, send the result back to client and monitor.

serverA.c: it gets link id from AWS using UDP, it will search in database a and then send back the result to aws.

serverB.c: it gets link id from AWS using UDP, it will search in database b and then send back the result to aws.

serverC.c: it gets input by user and the received link information get from database from AWS using UDP, then making calculation and send back the result to aws.

monitor.c: it gets the three parameters from AWS server and link information get from database A and B from AWS through TCP.


3. The format of all the messages exchanged:

AWS server exchange messages with clients by 3 integer: linkid, size, power.
AWS server exchange messages with clients by 7 integer: linkid, size, power, nomatch, transdelay, propdelay; endtoend.
AWS server exchange messages with server A by 2 int: flag, A; 4 float: B, C, D, E.
AWS server exchange messages with server B by 2 int: flag, A; 4 float: B, C, D, E.
AWS server exchange messages with server B by 5 int: flag, A, linkid, size, power; 4 float: B, C, D, E.

4. The Idiosyncrasy of your project:
I didn't meet with failure when running the project files. When after using ctrl+c to kill a process of aws.c, the monitor.c sometimes will begin a loop and looping forever.

5. Reused Code:

Some code block for setting TCP and UDP are from "Beej's Guide. Some part about initializing the TCP and UDP, creating sockets, binding the address, setting port and ip address, recv and send functions are used from Beej's guide, I mentioned them in the comment.
